type User {
	id: Int
	name: String
	age: Int
	gender: GenderEnum
}

enum GenderEnum {
	male
	female
}

input UserInput {
	name: String!
	password: String!
	age: Int
	gender: GenderEnum
}

type Result {
	isSucceed: Boolean
	message: String
}

type UserQueryResolver {
  users: [User]
  user(id:Int!): User
}

type UserMutationResolver {
  create(input:UserInput):Result
}

enum ServiceType(){
	restMap
	restData
}

type Service {
	name: String
	type: ServiceType
	address: String
}

type ServiceQueryResolver {
	services: [Service]
}

schema {
  query: UserQueryResolver
  mutation: UserMutationResolver
}